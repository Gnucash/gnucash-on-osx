diff --git a/configure.in b/configure.in
--- a/configure.in	2009-05-31 17:36:26.000000000 -0700
+++ b/configure.in        2009-05-31 17:39:20.000000000 -0700
@@ -215,7 +215,7 @@
 AM_CONDITIONAL(GNUCASH_SEPARATE_BUILDDIR, test "x${srcdir}" != "x.")
 
 # These are unavailable on windows/mingw32
-AC_CHECK_HEADERS(X11/Xlib.h glob.h)
+AC_CHECK_HEADERS(glob.h)
 AM_CONDITIONAL(HAVE_X11_XLIB_H, test "x$ac_cv_header_X11_Xlib_h" = "xyes")
 AC_CHECK_FUNCS(chown gethostname getppid getuid gettimeofday gmtime_r)
 AC_CHECK_FUNCS(gethostid link)
@@ -351,5 +351,17 @@
		AC_MSG_RESULT(no)
		;;	
 esac
+
+### --------------------------------------------------------------------------
+### Check to see if GDK uses the quartz backend and if we can use 
+### MacOSX integration
+_gdk_tgt=`$PKG_CONFIG --variable=target gdk-2.0`
+AM_CONDITIONAL([GDK_TARGET_QUARTZ], [test x$_gdk_tgt = xquartz])
+if test "x$_gdk_tgt" = xquartz; then 
+   PKG_CHECK_MODULES(IGE_MAC, ige-mac-integration)
+   AC_SUBST(IGE_MAC_LIBS)
+   AC_SUBST(IGE_MAC_CFLAGS)
+fi

 ### --------------------------------------------------------------------------
 ### Guile version checks (should this be something other than the Gnome check?)
--- a/configure   2009-02-23 12:25:34.000000000 -0800
+++ b/configure   2009-05-31 18:26:34.000000000 -0700
@@ -891,6 +891,10 @@
 DL_LIB
 HAVE_GLIB_2_8_FALSE
 HAVE_GLIB_2_8_TRUE
+GDK_TARGET_QUARTZ_TRUE
+GDK_TARGET_QUARTZ_FALSE
+IGE_MAC_CFLAGS
+IGE_MAC_LIBSGLIB26_LIBS
 GLIB_MKENUMS
 GOBJECT_QUERY
 GLIB_GENMARSHAL
@@ -26750,5 +26754,124 @@
 esac
 
 
+
+### --------------------------------------------------------------------------
+### Check to see if GDK uses the quartz backend and if we can use
+### MacOSX integration
+_gdk_tgt=`$PKG_CONFIG --variable=target gdk-2.0`
+ if test x$_gdk_tgt = xquartz; then
+  GDK_TARGET_QUARTZ_TRUE=
+  GDK_TARGET_QUARTZ_FALSE='#'
+else
+  GDK_TARGET_QUARTZ_TRUE='#'
+  GDK_TARGET_QUARTZ_FALSE=
+fi
+
+if test "x$_gdk_tgt" = xquartz; then
+
+  succeeded=no
+
+  if test -z "$PKG_CONFIG"; then
+    # Extract the first word of "pkg-config", so it can be a program name with args.
+set dummy pkg-config; ac_word=$2
+{ $as_echo "$as_me:$LINENO: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if test "${ac_cv_path_PKG_CONFIG+set}" = set; then
+  $as_echo_n "(cached) " >&6
+else
+  case $PKG_CONFIG in
+  [\\/]* | ?:[\\/]*)
+  ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a path.
+  ;;
+  *)
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+  for ac_exec_ext in '' $ac_executable_extensions; do
+  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
+    ac_cv_path_PKG_CONFIG="$as_dir/$ac_word$ac_exec_ext"
+    $as_echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+done
+IFS=$as_save_IFS
+
+  test -z "$ac_cv_path_PKG_CONFIG" && ac_cv_path_PKG_CONFIG="no"
+  ;;
+esac
+fi
+PKG_CONFIG=$ac_cv_path_PKG_CONFIG
+if test -n "$PKG_CONFIG"; then
+  { $as_echo "$as_me:$LINENO: result: $PKG_CONFIG" >&5
+$as_echo "$PKG_CONFIG" >&6; }
+else
+  { $as_echo "$as_me:$LINENO: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+  fi
+
+  if test "$PKG_CONFIG" = "no" ; then
+     echo "*** The pkg-config script could not be found. Make sure it is"
+     echo "*** in your path, or set the PKG_CONFIG environment variable"
+     echo "*** to the full path to pkg-config."
+     echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
+  else
+     pkg_config_min_version=0.9.0
+     if $PKG_CONFIG --atleast-pkgconfig-version $pkg_config_min_version; then
+        { $as_echo "$as_me:$LINENO: checking for ige-mac-integration" >&5
+$as_echo_n "checking for ige-mac-integration... " >&6; }
+
+        if $PKG_CONFIG --silence-errors --exists "ige-mac-integration" ; then
+            { $as_echo "$as_me:$LINENO: result: yes" >&5
+$as_echo "yes" >&6; }
+            succeeded=yes
+
+            { $as_echo "$as_me:$LINENO: checking IGE_MAC_CFLAGS" >&5
+$as_echo_n "checking IGE_MAC_CFLAGS... " >&6; }
+            IGE_MAC_CFLAGS=`$PKG_CONFIG --cflags "ige-mac-integration"`
+            { $as_echo "$as_me:$LINENO: result: $IGE_MAC_CFLAGS" >&5
+$as_echo "$IGE_MAC_CFLAGS" >&6; }
+
+            { $as_echo "$as_me:$LINENO: checking IGE_MAC_LIBS" >&5
+$as_echo_n "checking IGE_MAC_LIBS... " >&6; }
+            IGE_MAC_LIBS=`$PKG_CONFIG --libs "ige-mac-integration"`
+            { $as_echo "$as_me:$LINENO: result: $IGE_MAC_LIBS" >&5
+$as_echo "$IGE_MAC_LIBS" >&6; }
+        else
+            { $as_echo "$as_me:$LINENO: result: no" >&5
+$as_echo "no" >&6; }
+            IGE_MAC_CFLAGS=""
+            IGE_MAC_LIBS=""
+            ## If we have a custom action on failure, don't print errors, but
+            ## do set a variable so people can do so.
+            IGE_MAC_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "ige-mac-integration" 2>&1`
+            echo $IGE_MAC_PKG_ERRORS
+        fi
+
+
+
+     else
+        echo "*** Your version of pkg-config is too old. You need version $pkg_config_min_version or newer."
+        echo "*** See http://www.freedesktop.org/software/pkgconfig"
+     fi
+  fi
+
+  if test $succeeded = yes; then
+     :
+  else
+     { { $as_echo "$as_me:$LINENO: error: Library requirements (ige-mac-integration) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&5
+$as_echo "$as_me: error: Library requirements (ige-mac-integration) not met; consider adjusting the PKG_CONFIG_PATH environment variable if your libraries are in a nonstandard prefix so pkg-config can find them." >&2;}
+   { (exit 1); exit 1; }; }
+  fi
+
+
+
+fi
+
 ### --------------------------------------------------------------------------
 ### Guile version checks (should this be something other than the Gnome check? 
@@ -33564,6 +33692,13 @@
 Usually this means the macro was only invoked conditionally." >&2;}
    { (exit 1); exit 1; }; }
 fi
+if test -z "${GDK_TARGET_QUARTZ_TRUE}" && test -z "${GDK_TARGET_QUARTZ_FALSE}";then
+  { { $as_echo "$as_me:$LINENO: error: conditional \"GDK_TARGET_QUARTZ\" was never defined.
+Usually this means the macro was only invoked conditionally." >&5
+$as_echo "$as_me: error: conditional \"GDK_TARGET_QUARTZ\" was never defined.
+Usually this means the macro was only invoked conditionally." >&2;}
+   { (exit 1); exit 1; }; }
+fi
 if test -z "${GUILE_TRUE}" && test -z "${GUILE_FALSE}"; then
   { { $as_echo "$as_me:$LINENO: error: conditional \"GUILE\" was never defined.
 Usually this means the macro was only invoked conditionally." >&5
--- a/src/engine/Makefile.in      2009-02-23 12:25:25.000000000 -0800
+++ b/src/engine/Makefile.in      2009-06-01 09:52:04.000000000 -0700
@@ -215,6 +214,8 @@
 GUILE_LIBS = @GUILE_LIBS@
 GUILE_TOOLS = @GUILE_TOOLS@
 HTMLHELP_LIBS = @HTMLHELP_LIBS@
+IGE_MAC_CFLAGS = @IGE_MAC_CFLAGS@
+IGE_MAC_LIBS = @IGE_MAC_LIBS@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
@@ -374,4 +376,5 @@
	-I${top_srcdir}/src/gnc-module \
	${QOF_CFLAGS} \
	${GLIB_CFLAGS} \
+	${IGE_MAC_CFLAGS} \
	${GUILE_INCS}

 libgncmod_engine_la_SOURCES = \
@@ -477,6 +480,7 @@
   ${REGEX_LIBS} \
   ${GLIB_LIBS} \
   ${BINRELOC_LIBS} \
+  ${IGE_MAC_LIBS} \
   ${top_builddir}/lib/libc/libc-missing.la
 
 gncmoddir = ${GNC_SHAREDIR}/guile-modules/gnucash
--- a/src/gnome-utils/Makefile.in 2009-02-23 12:25:26.000000000 -0800
+++ b/src/gnome-utils/Makefile.in 2009-06-01 09:52:04.000000000 -0700
@@ -280,6 +280,8 @@
 GUILE_LIBS = @GUILE_LIBS@
 GUILE_TOOLS = @GUILE_TOOLS@
 HTMLHELP_LIBS = @HTMLHELP_LIBS@
+IGE_MAC_CFLAGS = @IGE_MAC_CFLAGS@
+IGE_MAC_LIBS = @IGE_MAC_LIBS@
 INSTALL = @INSTALL@
 INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
@@ -439,7 +441,8 @@
	-I${top_srcdir}/src -I${top_builddir}/src \
	-I${top_srcdir}/lib/libc ${GLIB_CFLAGS} ${GLADE_CFLAGS} \
	${GTK_CFLAGS} ${GNOME_CFLAGS} ${GTKHTML_CFLAGS} ${GUILE_INCS} \
-	${QOF_CFLAGS} ${GOFFICE_CFLAGS} $(am__append_3)
+	${QOF_CFLAGS} ${GOFFICE_CFLAGS} $(IGE_MAC_CFLAGS) \
+	$(am__append_3)
 libgncmod_gnome_utils_la_SOURCES = QuickFill.c account-quickfill.c \
	cursors.c dialog-account.c dialog-book-close.c \
	dialog-commodity.c dialog-options.c dialog-preferences.c \
@@ -557,8 +560,8 @@
	$(top_builddir)/lib/libc/libc-missing.la ${GNOME_LIBS} \
	${GTKHTML_LIBS} ${GUILE_LIBS} ${GDK_PIXBUF_LIBS} ${GLADE_LIBS} \
	${GUILE_LIBS} ${GLIB_LIBS} ${DB_LIBS} ${QOF_LIBS} \
-	${GOFFICE_LIBS} ${REGEX_LIBS} ${LIBXML2_LIBS} $(am__append_1) \
-	$(am__append_4)
+	${GOFFICE_LIBS} ${REGEX_LIBS} ${LIBXML2_LIBS} ${IGE_MAC_LIBS} \
+	$(am__append_1) $(am__append_4)
 gncmoddir = ${GNC_SHAREDIR}/guile-modules/gnucash
 gncmod_DATA = gnome-utils.scm 
 gncscmdir = ${GNC_SHAREDIR}/scm
diff --git a/src/gnome-utils/gnc-main-window.c b/src/gnome-utils/gnc-main-window.c
index a664630..42ed231 100644
--- a/src/gnome-utils/gnc-main-window.c
+++ b/src/gnome-utils/gnc-main-window.c
@@ -32,7 +32,6 @@
     @author Copyright (C) 2003 Jan Arne Petersen <jpetersen@uni-bonn.de>
     @author Copyright (C) 2003,2005,2006 David Hampton <hampton@employees.org>
 */
-
 #include "config.h"
 
 #include <gnome.h>
@@ -67,6 +66,9 @@
 // +JSLED
 #include "gnc-html.h"
 #include "gnc-autosave.h"
+#ifdef MAC_INTEGRATION
+#include <igemacintegration/igemacintegration.h>
+#endif
 
 /** Names of signals generated by the main window. */
 enum {
@@ -145,6 +147,9 @@ static void do_popup_menu(GncPluginPage *page, GdkEventButton *event);
 static gboolean gnc_main_window_popup_menu_cb (GtkWidget *widget, GncPluginPage *page);
 
 static GtkAction *gnc_main_window_find_action (GncMainWindow *window, const gchar *name);
+#ifdef MAC_INTEGRATION
+static void gtk_quartz_set_menu(GncMainWindow* window);
+#endif
 
 /** The instance private data structure for an embedded window
  *  object. */
@@ -1344,7 +1349,14 @@ gnc_main_window_update_one_menu_action (GncMainWindow *window,
 		 "label", data->label,
 		 "visible", data->visible,
 		 (char *)NULL);
-  LEAVE(" ");
+#ifdef MAC_INTEGRATION
+   {
+       GtkWidget *menu = gtk_ui_manager_get_widget(window->ui_merge, 
+						   "/menubar"
+);
+       ige_mac_menu_sync(GTK_MENU_SHELL( menu ));
+   }
+ #endif  LEAVE(" ");
 }
 
 
@@ -1900,6 +1912,9 @@ gnc_main_window_init (GncMainWindow *window,
 	  qof_event_register_handler(gnc_main_window_event_handler, window);
 
 	gnc_main_window_setup_window (window);
+#ifdef MAC_INTEGRATION
+	gtk_quartz_set_menu(window);
+#endif	
 	gnc_gobject_tracking_remember(G_OBJECT(window),
 				      G_OBJECT_CLASS(klass));
 }
@@ -2948,6 +2963,44 @@ gnc_main_window_setup_window (GncMainWindow *window)
 	LEAVE(" ");
 }
 
+#ifdef MAC_INTEGRATION
+static void
+gtk_quartz_set_menu(GncMainWindow* window) {
+    IgeMacMenuGroup *group;
+    GtkWidget       *menu;
+    GtkWidget       *item;
+
+    menu = gtk_ui_manager_get_widget (window->ui_merge, "/menubar");
+    if (GTK_IS_MENU_ITEM (menu))
+      menu = gtk_menu_item_get_submenu (GTK_MENU_ITEM (menu));
+    gtk_widget_hide(menu);
+    ige_mac_menu_set_menu_bar (GTK_MENU_SHELL (menu));
+
+    item = gtk_ui_manager_get_widget (window->ui_merge, 
+                                    "/menubar/File/FileQuit");
+    if (GTK_IS_MENU_ITEM (item))
+      ige_mac_menu_set_quit_menu_item (GTK_MENU_ITEM (item));
+
+    /*  the about group  */
+    group = ige_mac_menu_add_app_menu_group ();
+
+    item = gtk_ui_manager_get_widget (window->ui_merge, 
+                                    "/menubar/Help/HelpAbout");
+    if (GTK_IS_MENU_ITEM (item))
+      ige_mac_menu_add_app_menu_item (group, GTK_MENU_ITEM (item), 
+				      _("About GnuCash"));
+
+    /*  the preferences group  */
+    group = ige_mac_menu_add_app_menu_group ();
+
+    item = gtk_ui_manager_get_widget (window->ui_merge, 
+                                    "/menubar/Edit/EditPreferences");
+    if (GTK_IS_MENU_ITEM (item))
+      ige_mac_menu_add_app_menu_item (group, GTK_MENU_ITEM (item), NULL);
+
+}
+#endif //MAC_INTEGRATION
+
 /* Callbacks */
 static void
 gnc_main_window_add_widget (GtkUIManager *merge,
@@ -3103,6 +3156,9 @@ gnc_main_window_page_reordered (GtkNotebook *notebook,
 	LEAVE(" ");
 }
 #endif
+#ifdef MAC_INTEGRATION
+#include <igemacintegration/ige-mac-menu.h>
+#endif
 
 static void
 gnc_main_window_plugin_added (GncPlugin *manager,
 --git a/src/gnome-utils/Makefile.am b/src/gnome-utils/Makefile.am
index 3a9f056..0fc611a 100644
--- a/src/gnome-utils/Makefile.am
+++ b/src/gnome-utils/Makefile.am
@@ -20,7 +20,8 @@ AM_CFLAGS = \
   ${GTKHTML_CFLAGS} \
   ${GUILE_INCS} \
   ${QOF_CFLAGS} \
-  ${GOFFICE_CFLAGS}
+  ${GOFFICE_CFLAGS} \
+  $(IGE_MAC_CFLAGS)
 
 libgncmod_gnome_utils_la_SOURCES = \
   QuickFill.c \
@@ -193,11 +194,14 @@ libgncmod_gnome_utils_la_LIBADD = \
   ${QOF_LIBS} \
   ${GOFFICE_LIBS} \
   ${REGEX_LIBS} \
-  ${LIBXML2_LIBS}
+  ${LIBXML2_LIBS} \
+  ${IGE_MAC_LIBS}
 
-if HAVE_X11_XLIB_H
+if HAVE_X11_XLIB_H 
+if !GDK_TARGET_QUARTZ
   libgncmod_gnome_utils_la_LIBADD += -lX11
 endif
+endif
 
 if BUILDING_FROM_SVN
 swig-gnome-utils.c: gnome-utils.i gnc-html.h \
 --git a/src/engine/binreloc.c b/src/engine/binreloc.c
index d582a5d..032f2af 100644
--- a/src/engine/binreloc.c
+++ b/src/engine/binreloc.c
@@ -18,6 +18,9 @@
 	#include <sys/types.h>
 	#include <sys/stat.h>
 	#include <unistd.h>
+#ifdef MAC_INTEGRATION
+#include <igemacintegration/ige-mac-bundle.h>
+#endif
 #endif /* ENABLE_BINRELOC */
 #include <stdio.h>
 #include <stdlib.h>
@@ -27,7 +30,9 @@
 #include <glib.h>
 
 G_BEGIN_DECLS
-
+#if defined ENABLE_BINRELOC && defined MAC_INTEGRATION
+static IgeMacBundle *bundle = NULL;
+#endif
 
 /** @internal
  * Find the canonical filename of the executable. Returns the filename
@@ -61,6 +66,23 @@ _br_find_exe (GbrInitError *error)
 				   (char*)NULL);
 	g_free (prefix);
 	return result;
+#elif MAC_INTEGRATION
+	gchar *prefix = NULL, *result = NULL;
+	bundle = ige_mac_bundle_get_default();
+	if (!bundle) {
+	    *error = GBR_INIT_ERROR_DISABLED;
+	    return NULL;
+	}
+	if (!ige_mac_bundle_get_is_app_bundle (bundle)) {
+	    *error = GBR_INIT_ERROR_OPEN_MAPS;
+	    return NULL;
+	}
+	ige_mac_bundle_setup_environment(bundle);
+	prefix = g_strdup(ige_mac_bundle_get_path(bundle));
+	result = g_build_filename(prefix, "Contents/MacOS", 
+					 "gnucash-bin.exe", NULL);
+	g_free(prefix);
+	return result;
 #else
 	char *path, *path2, *line, *result;
 	size_t buf_size;
@@ -202,7 +224,7 @@ _br_find_exe_for_symbol (const void *symbol, GbrInitError *error)
 		*error = GBR_INIT_ERROR_DISABLED;
 	return (char *) NULL;
 #else
-#ifdef G_OS_WIN32
+#if defined G_OS_WIN32 || defined MAC_INTEGRATION
 	g_warning ("_br_find_exe_for_symbol not implemented on win32.");
 	if (error)
 		*error = GBR_INIT_ERROR_DISABLED;
@@ -474,18 +496,33 @@ gbr_find_prefix (const gchar *default_prefix)
 {
 	gchar *dir1, *dir2;
 
-	if (exe == NULL) {
+#if defined ENABLE_BINRELOC && defined MAC_INTEGRATION
+	gchar *prefix = NULL, *result = NULL;
+	if (bundle == NULL) {
 		/* BinReloc not initialized. */
 		if (default_prefix != NULL)
 			return g_strdup (default_prefix);
 		else
 			return NULL;
 	}
+	prefix = g_strdup(ige_mac_bundle_get_path(bundle));
+	result = g_build_filename(prefix, "Contents/Resources", NULL);
+	g_free(prefix);
+	return result;
+#else
 
+	if (exe == NULL) {
+		/* BinReloc not initialized. */
+		if (default_prefix != NULL)
+			return g_strdup (default_prefix);
+		else
+			return NULL;
+	}
 	dir1 = g_path_get_dirname (exe);
 	dir2 = g_path_get_dirname (dir1);
 	g_free (dir1);
 	return dir2;
+#endif //ENABLE_BINRELOC && MAC_INTEGRATION
 }
 
 
@@ -506,6 +543,19 @@ gchar *
 gbr_find_bin_dir (const gchar *default_bin_dir)
 {
 	gchar *prefix, *dir;
+#if defined ENABLE_BINRELOC && defined MAC_INTEGRATION
+	if (bundle == NULL) {
+	    /* BinReloc not initialized. */
+	    if (default_bin_dir != NULL)
+		return g_strdup (default_bin_dir);
+	    else
+		return NULL;
+	}
+	prefix = g_strdup(ige_mac_bundle_get_path(bundle));
+	dir = g_build_filename(prefix, "Contents/MacOS", NULL);
+	g_free(prefix);
+	return dir;
+#else
 
 	prefix = gbr_find_prefix (NULL);
 	if (prefix == NULL) {
@@ -519,6 +569,7 @@ gbr_find_bin_dir (const gchar *default_bin_dir)
 	dir = g_build_filename (prefix, "bin", NULL);
 	g_free (prefix);
 	return dir;
+#endif //ENABLE_BINRELOC && MAC_INTEGRATION
 }
 
 
 --git a/src/engine/Makefile.am b/src/engine/Makefile.am
index bbc65e8..e96dbbf 100644
--- a/src/engine/Makefile.am
+++ b/src/engine/Makefile.am
@@ -10,6 +10,7 @@ AM_CFLAGS = \
 	-I${top_srcdir}/src/gnc-module \
 	${QOF_CFLAGS} \
 	${GLIB_CFLAGS} \
+	${IGE_MAC_CFLAGS} \
 	${GUILE_INCS}
 
 libgncmod_engine_la_SOURCES = \
@@ -116,6 +117,7 @@ libgncmod_engine_la_LIBADD = \
   ${REGEX_LIBS} \
   ${GLIB_LIBS} \
   ${BINRELOC_LIBS} \
+  ${IGE_MAC_LIBS} \
   ${top_builddir}/lib/libc/libc-missing.la
 
 gncmoddir = ${GNC_SHAREDIR}/guile-modules/gnucash
