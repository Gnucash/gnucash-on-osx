--- ./activation-server/activation-server-main.c	2009-04-23 15:37:55.000000000 -0700
+++ ./activation-server/activation-server-main.c	2013-08-26 13:41:08.000000000 -0700
@@ -70,7 +70,7 @@
 
 static gboolean        server_threaded = FALSE;
 static glong           server_guard_depth = 0;
-static GStaticRecMutex server_guard = G_STATIC_REC_MUTEX_INIT;
+static GRecMutex server_guard;
 
 static PortableServer_POA
 server_get_poa (void)
@@ -104,7 +104,7 @@
 #endif
         server_guard_depth = 0;
         for (i = 0; i < state; i++)
-                g_static_rec_mutex_unlock (&server_guard);
+                g_rec_mutex_unlock (&server_guard);
         return state;
 }
 
@@ -117,7 +117,7 @@
                 return;
 
         for (i = 0; i < state; i++)
-                g_static_rec_mutex_lock (&server_guard);
+                g_rec_mutex_lock (&server_guard);
         server_guard_depth = state;
 #ifdef BONOBO_ACTIVATION_DEBUG
         fprintf (stderr, "thread %p re-taken server guard with depth %ld\n",
@@ -131,7 +131,7 @@
         if (!server_threaded)
                 return;
 
-        g_static_rec_mutex_lock (&server_guard);
+        g_rec_mutex_lock (&server_guard);
         server_guard_depth++;
         fprintf (stderr, "thread %p take guard [%ld]\n",
                  g_thread_self (), server_guard_depth);
@@ -146,7 +146,7 @@
         fprintf (stderr, "thread %p release guard [%ld]\n",
                  g_thread_self (), server_guard_depth);
         server_guard_depth--;
-        g_static_rec_mutex_unlock (&server_guard);
+        g_rec_mutex_unlock (&server_guard);
 }
 
 #ifdef G_OS_WIN32
--- ./bonobo-activation/bonobo-activation-init.c	2009-04-23 15:37:55.000000000 -0700
+++ ./bonobo-activation/bonobo-activation-init.c	2013-08-26 13:39:08.000000000 -0700
@@ -46,7 +46,7 @@
 
 #include <orbit/orbit.h>
 
-GStaticRecMutex _bonobo_activation_guard = G_STATIC_REC_MUTEX_INIT;
+GRecMutex _bonobo_activation_guard;
 static CORBA_ORB bonobo_activation_orb = CORBA_OBJECT_NIL;
 static CORBA_Context bonobo_activation_context;
 static gboolean is_initialized = FALSE;
--- ./bonobo-activation/bonobo-activation-private.h	2009-04-23 15:37:55.000000000 -0700
+++ ./bonobo-activation/bonobo-activation-private.h	2013-08-26 13:37:19.000000000 -0700
@@ -31,9 +31,9 @@
 
 #define BONOBO_ACTIVATION_FACTORY_PRIVATE_TIMEOUT 1
 
-extern GStaticRecMutex _bonobo_activation_guard;
-#define BONOBO_ACTIVATION_LOCK()   g_static_rec_mutex_lock   (&_bonobo_activation_guard)
-#define BONOBO_ACTIVATION_UNLOCK() g_static_rec_mutex_unlock (&_bonobo_activation_guard)
+extern GRecMutex _bonobo_activation_guard;
+#define BONOBO_ACTIVATION_LOCK()   g_rec_mutex_lock   (&_bonobo_activation_guard)
+#define BONOBO_ACTIVATION_UNLOCK() g_rec_mutex_unlock (&_bonobo_activation_guard)
 
 void         bonobo_activation_timeout_reg_check_set  (gboolean           on);
 gboolean     bonobo_activation_timeout_reg_check      (gpointer           data);
